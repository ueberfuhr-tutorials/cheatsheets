name: Continuous Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  validate-markdown:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # https://github.com/marketplace/actions/markdown-link-check
      - uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: 'yes'
          use-verbose-mode: 'yes'
  create-pdf-html:
    needs: validate-markdown
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # https://github.com/marketplace/actions/markdown-to-pdf-and-html
      - uses: baileyjm02/markdown-to-pdf@v1
        with:
          input_path: 'sheets'
          output_dir: generated-files
          build_html: true
      - uses: actions/upload-artifact@v4
        with:
          name: generated-files
          path: generated-files
  build-app-container:
    needs:
      - create-pdf-html
    runs-on: ubuntu-latest
    steps:
      - name: Create Dockerfile
        run: |
          cat <<EOF > Dockerfile
          FROM nginx:1.27.1-alpine
          LABEL maintainer="Ralf Ueberfuhr"
          COPY generated-files/**/*.html /usr/share/nginx/html
          EOF
      - name: Upload Dockerfile
        uses: actions/upload-artifact@v4
        with:
          name: Dockerfile
          path: Dockerfile
      - name: Restore generated HTML/PDF files
        uses: actions/download-artifact@v4
        with:
          name: generated-files
          path: generated-files
      # (optionally) https://github.com/docker/buildx
      # (optionally) https://github.com/docker/metadata-action
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build Container
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          tags: |
            ${{ secrets.DOCKERHUB_REPOSITORY }}:latest
            ${{ secrets.DOCKERHUB_REPOSITORY }}:build-${{ github.run_number }}
          labels: |
            repository=${{ github.repositoryUrl }}
            commit=${{ env.GITHUB_SHA }}
          push: ${{ github.event_name != 'pull_request' }}
      - name: Write Summary
        if: github.event_name != 'pull_request'
        run: echo "Successfully built container image '${{ secrets.DOCKERHUB_REPOSITORY }}:${{ github.run_number }}'" >> $GITHUB_STEP_SUMMARY
